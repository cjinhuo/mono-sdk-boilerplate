const dayjs = require('dayjs')
const execa = require('execa')

async function getInfoByCommitId(commitId) {
	const splitChar = '__'
	const res = await execa('git', ['show', `--pretty=%ae${splitChar}%cd${splitChar}%H`, commitId], { stdio: 'pipe' })
	const match = res.stdout.match(/^(.*?)$/m)
	const [email, date, intactHash] = match[1].split(splitChar)
	return { email, date: dayjs(date).format('YYYY-MM-DD'), intactHash }
}

async function getRemoteUrl() {
	try {
		const res = await execa('git', ['config', '--get', 'remote.origin.url'], { stdio: 'pipe' })
		let url = res.stdout.trim()
		// 转换SSH URL为HTTPS URL
		if (url.startsWith('git@')) {
			url = url.replace(/^git@([^:]+):/, 'https://$1/')
		}
		// 移除.git后缀
		url = url.replace(/\.git$/, '')
		return url
	} catch (error) {
		return 'https://github.com/unknown/repo' // 默认值
	}
}
async function getSlardarReleaseLine(changeset) {
	const { email, intactHash } = await getInfoByCommitId(changeset.commit)
	const date = dayjs().format('YYYY-MM-DD')
	const remoteUrl = await getRemoteUrl()
	// - [c0b7864a4] @chenjinhuo - 2023.03.12:新增某某字段
	return `- [${changeset.commit}](${remoteUrl}/commit/${intactHash}) @${email} - ${date} => ${changeset.summary}`
}

async function getReleaseLine(changeset) {
	return await getSlardarReleaseLine(changeset)
}

async function getDependencyReleaseLine(_changesets, _dependenciesUpdated, _changelogOpts) {
	// self changelog has generated by getReleaseLine
	if (!_changesets.length) return ''

	const releaseLines = []
	for (const changeset of _changesets) {
		const releaseLine = await getSlardarReleaseLine(changeset)
		releaseLines.push(releaseLine)
	}
	const dependenciesUpdated = _dependenciesUpdated[0]
	const updatedBy = `- Updated By ${dependenciesUpdated.name}: ${dependenciesUpdated.oldVersion}->${dependenciesUpdated.newVersion}`
	return updatedBy + '\n' + releaseLines.map((v) => `  ${v}`).join('\n')
}

module.exports = {
	getReleaseLine,
	getDependencyReleaseLine,
}
